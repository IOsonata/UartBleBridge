#
# script for Nordic nRF52 series, a CORTEX-M4F chip
#

source [find target/swj-dp.tcl]

if { [info exists CHIPNAME] } {
   set _CHIPNAME $CHIPNAME
} else {
   set _CHIPNAME nrf52
}

if { [info exists ENDIAN] } {
   set _ENDIAN $ENDIAN
} else {
   set _ENDIAN little
}

if { [info exists WORKAREASIZE] } {
   set _WORKAREASIZE $WORKAREASIZE
} else {
   set _WORKAREASIZE 0x4000
}

if { [info exists CPUTAPID] } {
   set _CPUTAPID $CPUTAPID
} else {
   set _CPUTAPID 0x2ba01477
}

swj_newdap $_CHIPNAME cpu -expected-id $_CPUTAPID

set _TARGETNAME $_CHIPNAME.cpu

### Use these 2 lines for OpenOCD 0.10.0 2019-12 or above
#dap create $_CHIPNAME.dap -chain-position $_CHIPNAME.cpu
#target create $_TARGETNAME cortex_m -dap $_CHIPNAME.dap

### Use this for older OpenOcd 0.10.0
target create $_TARGETNAME cortex_m -chain-position $_TARGETNAME


$_TARGETNAME configure -work-area-phys 0x20000000 -work-area-size $_WORKAREASIZE -work-area-backup 0

if {![using_hla]} {
   # The chip supports standard ARM/Cortex-M4 SYSRESETREQ signal
   cortex_m reset_config sysresetreq
}

#$_TARGETNAME configure -event examine-start {
#  reset init
#  dap apid 1
#  dap apreg 1 0xC
#  dap apreg 1 4 1
#}

flash bank $_CHIPNAME.flash nrf51 0x00000000 0 1 1 $_TARGETNAME
flash bank $_CHIPNAME.uicr nrf51 0x10001000 0 1 1 $_TARGETNAME

adapter_khz 1000

